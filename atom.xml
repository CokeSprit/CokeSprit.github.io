<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CokeSprit</title>
  <icon>https://www.gravatar.com/avatar/b765c05225fbf501f68a98a1395ba44b</icon>
  <subtitle>爱生活,爱编程</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://cokesprit.top/"/>
  <updated>2020-07-19T08:32:48.754Z</updated>
  <id>http://cokesprit.top/</id>
  
  <author>
    <name>可乐精</name>
    <email>2665281140@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>js实参求乘积</title>
    <link href="http://cokesprit.top/posts/js-shican-qiu-chengji/"/>
    <id>http://cokesprit.top/posts/js-shican-qiu-chengji/</id>
    <published>2020-07-19T07:25:53.000Z</published>
    <updated>2020-07-19T08:32:48.754Z</updated>
    
    <content type="html"><![CDATA[<p> 在解题之前我们先搞懂什么是js中的形参和实参？  </p><blockquote></blockquote><h5 id="js中的形参和实参"><a href="#js中的形参和实参" class="headerlink" title="js中的形参和实参"></a>js中的形参和实参</h5><pre><code><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">            <span class="comment">// 形式参数 形参</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">形参<span class="number">1</span>,形参<span class="number">2</span></span>)</span>{ <span class="comment">// 里面的就是形参</span></span><br><span class="line">    <span class="built_in">console</span>.log(test.length); <span class="comment">// 形参长度</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>.length);<span class="comment">// 实参长度</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//   实际参数 实参</span></span><br><span class="line">test(实参<span class="number">1</span>,实参<span class="number">2</span>,实参<span class="number">3</span>);</span><br></pre></td></tr></tbody></table></figure></code></pre><blockquote></blockquote><h5 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h5><p>形参和实参数量可以不相等。<br><span style="color:#f5871f;">arguments</span> 是一个对应于传递给函数的参数的<span style="color:#f5871f;">类数组对象</span>里面包含所有的实参!!!  </p><blockquote></blockquote><h5 id="js实参求乘积"><a href="#js实参求乘积" class="headerlink" title="js实参求乘积"></a>js实参求乘积</h5><p>了解了什么实参和形参接下来就可以愉快的码代码了  </p><pre><code><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params"></span>)</span>{</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="built_in">arguments</span>.length;i++){</span><br><span class="line">    a *= <span class="built_in">arguments</span>[i];</span><br><span class="line">}</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">sum(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br></pre></td></tr></tbody></table></figure></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; 在解题之前我们先搞懂什么是js中的形参和实参？  &lt;/p&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;js中的形参和实参&quot;&gt;&lt;a href=&quot;#js中的形参和实参&quot; class=&quot;headerlink&quot; title=&quot;js中的形参和实参&quot;&gt;&lt;/
      
    
    </summary>
    
    
    
      <category term="js面试题" scheme="http://cokesprit.top/tags/js%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>ASCII码 和 UNICODE码</title>
    <link href="http://cokesprit.top/posts/504aee57/"/>
    <id>http://cokesprit.top/posts/504aee57/</id>
    <published>2020-07-19T02:18:33.000Z</published>
    <updated>2020-07-19T06:50:20.797Z</updated>
    
    <content type="html"><![CDATA[<p>ASCII码0-127占一个byte大小，UNICODE码涵盖ASCII码 255 以后就占两个 byte大小。  </p><h4 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h4><p> 写一个函数，接收任意一个字符串，算出字符串的总字节数。</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">strByte</span>(<span class="params">str</span>)</span>{</span><br><span class="line">       <span class="keyword">let</span> sum = <span class="number">0</span> ;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; str.length; i++){</span><br><span class="line">           <span class="keyword">if</span>(str.charCodeAt(i) &gt;= <span class="number">0</span> &amp;&amp; str.charCodeAt(i) &lt; <span class="number">127</span>){</span><br><span class="line">               sum = sum + <span class="number">1</span>;</span><br><span class="line">           }<span class="keyword">else</span>{</span><br><span class="line">               sum = sum + <span class="number">2</span>;</span><br><span class="line">           }</span><br><span class="line">       }</span><br><span class="line">       <span class="keyword">return</span> sum;</span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">var</span>  str = <span class="string">"深爱之人藏心不挂嘴，久念之人在梦不在眼"</span>;</span><br><span class="line">   <span class="built_in">console</span>.log(strByte(str));</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ASCII码0-127占一个byte大小，UNICODE码涵盖ASCII码 255 以后就占两个 byte大小。  &lt;/p&gt;
&lt;h4 id=&quot;练习&quot;&gt;&lt;a href=&quot;#练习&quot; class=&quot;headerlink&quot; title=&quot;练习&quot;&gt;&lt;/a&gt;练习&lt;/h4&gt;&lt;p&gt; 写一个
      
    
    </summary>
    
    
    
      <category term="js笔记" scheme="http://cokesprit.top/tags/js%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客发布踩坑</title>
    <link href="http://cokesprit.top/posts/ffafe98e/"/>
    <id>http://cokesprit.top/posts/ffafe98e/</id>
    <published>2020-07-18T02:29:37.000Z</published>
    <updated>2020-07-18T05:22:43.353Z</updated>
    
    <content type="html"><![CDATA[<p>hexo博客 <strong>Username for ‘<a href="https://github.com" target="_blank" rel="noopener">https://github.com</a></strong> 验证问题<br>这时候 输入你的github邮箱账号 <span style="color:red;">（不是你的github名！！！）</span> 之后会弹出一个提示框 然后输入邮箱登录密码即可。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      hexo博客 **Username for &#39;https://github.com** 验证问题
    
    </summary>
    
    
    
      <category term="hexo" scheme="http://cokesprit.top/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo 博客文章发布部署</title>
    <link href="http://cokesprit.top/posts/c3259ce2/"/>
    <id>http://cokesprit.top/posts/c3259ce2/</id>
    <published>2020-06-19T11:56:52.930Z</published>
    <updated>2020-07-18T04:33:12.572Z</updated>
    
    <content type="html"><![CDATA[<h3 id="创建新帖子"><a href="#创建新帖子" class="headerlink" title="创建新帖子"></a>创建新帖子</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><h3 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><h3 id="部署到远程站点"><a href="#部署到远程站点" class="headerlink" title="部署到远程站点"></a>部署到远程站点</h3><pre><code class="bash">$ hexo deploy</code></pre><p>作者：可乐精<br>链接：<a href="http://cokesprit.top/">CokeSprit</a><br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;创建新帖子&quot;&gt;&lt;a href=&quot;#创建新帖子&quot; class=&quot;headerlink&quot; title=&quot;创建新帖子&quot;&gt;&lt;/a&gt;创建新帖子&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;g
      
    
    </summary>
    
    
    
      <category term="hexo" scheme="http://cokesprit.top/tags/hexo/"/>
    
  </entry>
  
</feed>
