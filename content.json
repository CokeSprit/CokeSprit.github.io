[{"title":"js中的 ||运算 和 &&运算","date":"2020-07-19T13:54:30.000Z","path":"/posts/js-huo-bingqie/","text":"js中的 || 运算只要 || 前面为 false 的话那么就会往后走(直到碰到true)，走到最后不管是真是假都返回。 js中的 &amp;&amp; 运算只要 &amp;&amp; 前面为 false 的话,那么就返回 &amp;&amp; 前面的值，不管你后面有多少个真都返回 true。 补充在javasript中 undefined,null,NaN,“ “,0,false 这些都是为false即假。 举个栗子写一个函数如果有传入姓名则 return 出去，否则 return 您没有输入姓名 1234567funciton test(name){ return name || '您没有输入姓名';}// 无参 -&gt; 等于空 -&gt; 既 假console.log(test()); //输出-&gt; 您没有输入姓名// 有参 -&gt; 不等于上面那几个假值 既真console.log(test('晓明')); //输出-&gt; 晓明 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"js笔记","slug":"js笔记","permalink":"http://cokesprit.top/tags/js%E7%AC%94%E8%AE%B0/"}]},{"title":"js实参求乘积","date":"2020-07-19T07:25:53.000Z","path":"/posts/js-shican-qiu-chengji/","text":"在解题之前我们先搞懂什么是js中的形参和实参？ js中的形参和实参12345678 // 形式参数 形参function test(形参1,形参2){ // 里面的就是形参 console.log(test.length); // 形参长度 console.log(arguments.length);// 实参长度}// 实际参数 实参test(实参1,实参2,实参3);补充 形参和实参数量可以不相等。 arguments 是一个对应于传递给函数的参数的类数组对象里面包含所有的实参!!! 实参里面传了值的可以在函数内部修改实参的值，如果实参里面并没有传入值，也给形参赋值了，这样是没有用的。 js实参求乘积了解了什么实参和形参接下来就可以愉快的码代码了 123456789function sum(){var a = 1;for(var i = 0; i &lt; arguments.length;i++){ a *= arguments[i];}console.log(a);}sum(1,2,3,4); document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"js面试题","slug":"js面试题","permalink":"http://cokesprit.top/tags/js%E9%9D%A2%E8%AF%95%E9%A2%98/"}]},{"title":"ASCII码 和 UNICODE码","date":"2020-07-19T02:18:33.000Z","path":"/posts/504aee57/","text":"ASCII码0-127占一个byte大小，UNICODE码涵盖ASCII码 255 以后就占两个 byte大小。 练习 写一个函数，接收任意一个字符串，算出字符串的总字节数。 1234567891011function getBytes(str){ var sth = str.length; for(var i = 0; i &lt; str.length; i++){ var stc = str.charCodeAt(i); if(stc &gt; 255){ sth++; } } return sth;}console.log(getBytes('Hello js，我们做好朋友吧！')); 实现思路先获取到字符串的长度,将其存入一个变量 sth ,然后利用循环判断编码是否大于 255 ,如果大于 sth++ 。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"js笔记","slug":"js笔记","permalink":"http://cokesprit.top/tags/js%E7%AC%94%E8%AE%B0/"}]},{"title":"hexo博客发布踩坑","date":"2020-07-18T02:29:37.000Z","path":"/posts/ffafe98e/","text":"hexo博客 Username for ‘https://github.com 验证问题这时候 输入你的github邮箱账号 （不是你的github名！！！） 之后会弹出一个提示框 然后输入邮箱登录密码即可。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"hexo","slug":"hexo","permalink":"http://cokesprit.top/tags/hexo/"}]},{"title":"hexo 博客文章发布部署","date":"2020-06-19T11:56:52.930Z","path":"/posts/c3259ce2/","text":"创建新帖子1$ hexo new \"My New Post\" 运行服务器1$ hexo server 生成静态文件1$ hexo generate 部署到远程站点$ hexo deploy 作者：可乐精链接：CokeSprit著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"hexo","slug":"hexo","permalink":"http://cokesprit.top/tags/hexo/"}]}]